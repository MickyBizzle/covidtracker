{"version":3,"sources":["constants/LegendColors.js","components/Map.js","components/Legend.js","components/CountryCard.js","components/BottomInfo.js","components/Help.js","App.js","index.js"],"names":["NumValues","ColorValues","memo","setTooltipContent","setSelectedCountry","countryData","mostCases","normalizeCountry","getColour","scaleLinear","domain","range","fill","name","cases","find","country","Country","TotalConfirmed","height","window","innerHeight","width","innerWidth","data-tip","zoom","translateExtent","geography","geographies","map","geo","properties","stroke","strokeWidth","key","rsmKey","onClick","abr","data","onMouseEnter","onMouseLeave","style","hover","outline","Legend","labelBar","useRef","useState","setLabelBarHeight","numValues","setNumValues","useEffect","current","clientHeight","className","ref","slice","reverse","numVal","index","background","justifyContent","fontSize","backgroundColor","CountryCard","clear","src","alt","color","TotalDeaths","TotalRecovered","NewConfirmed","NewDeaths","NewRecovered","prev","next","BottomInfo","href","target","Help","hovering","setHovering","setTimeout","handleHover","App","tooltip","setTooltip","countries","setCountries","setLastUpdated","setMostCases","selectedCountry","fetch","then","res","json","Date","Countries","sort","a","b","most","length","Map","input","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5ae38ad.chunk.js","sourcesContent":["export const NumValues = [0, 1000, 10000, 100000];\r\nexport const ColorValues = [\r\n  \"#39b54a\",\r\n  \"#d8d52b\",\r\n  \"#eac435\",\r\n  \"#f56416\",\r\n  \"#ff0000\",\r\n];\r\n","import React, { useState, useEffect, memo } from \"react\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { NumValues, ColorValues } from \"./../constants/LegendColors\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\";\r\n// \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst MapChart = ({\r\n  setTooltipContent,\r\n  setSelectedCountry,\r\n  countryData,\r\n  mostCases,\r\n  normalizeCountry\r\n}) => {\r\n  const getColour = scaleLinear()\r\n    .domain([...NumValues, mostCases])\r\n    .range(ColorValues);\r\n\r\n  const fill = (name) => {\r\n    let cases = countryData.find(\r\n      (country) => country.Country === normalizeCountry(name)\r\n    );\r\n    if (cases) {\r\n      return getColour(cases.TotalConfirmed);\r\n    }\r\n    return \"black\";\r\n  };\r\n\r\n  const height = window.innerHeight;\r\n  const width = window.innerWidth;\r\n\r\n  return (\r\n    <ComposableMap data-tip=\"\" height={height} width={width}>\r\n      <ZoomableGroup\r\n        zoom={2}\r\n        translateExtent={[\r\n          [0, 0],\r\n          [width, height]\r\n        ]}\r\n      >\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const { name } = geo.properties;\r\n              return (\r\n                <Geography\r\n                  stroke=\"#000\"\r\n                  strokeWidth={0.05}\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onClick={() =>\r\n                    setSelectedCountry({\r\n                      abr: geo.properties[\"Alpha-2\"],\r\n                      data: countryData.find(\r\n                        (country) => country.Country === normalizeCountry(name)\r\n                      )\r\n                    })\r\n                  }\r\n                  onMouseEnter={() => {\r\n                    setTooltipContent(name);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  fill={fill(name)}\r\n                  style={{\r\n                    hover: {\r\n                      fill: \"#5eaeff\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ZoomableGroup>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Legend.scss\";\r\nimport { ColorValues, NumValues } from \"../constants/LegendColors\";\r\n\r\nexport const Legend = ({ mostCases }) => {\r\n  const labelBar = useRef();\r\n  const [labelBarHeight, setLabelBarHeight] = useState(0);\r\n  const [numValues, setNumValues] = useState([...NumValues]);\r\n\r\n  useEffect(() => {\r\n    setLabelBarHeight(labelBar.current.clientHeight);\r\n  }, [labelBar]);\r\n\r\n  useEffect(() => {\r\n    if (mostCases) setNumValues([...numValues, mostCases]);\r\n  }, [mostCases]);\r\n\r\n  return (\r\n    <div className=\"legend\">\r\n      <div className=\"legendTitle\">\r\n        <span>Total Confirmed Cases</span>\r\n      </div>\r\n      <div className=\"legendContainer\">\r\n        <div className=\"labels\" ref={labelBar}>\r\n          {numValues\r\n            .slice(0)\r\n            .reverse()\r\n            .map((numVal, index) => (\r\n              <div className=\"label\" key={index}>\r\n                {numVal + \" - \"}\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div\r\n          className=\"colorBar\"\r\n          style={{ background: `linear-gradient(to top, ${ColorValues})` }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"legendContainer\" style={{ height: 30 }}>\r\n        <div className=\"labels\" style={{ justifyContent: \"center\" }}>\r\n          <div className=\"label\" style={{ fontSize: 14 }}>\r\n            No data -{\" \"}\r\n          </div>\r\n        </div>\r\n        <div className=\"colorBar\" style={{ backgroundColor: \"black\" }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { memo } from \"react\";\r\nimport \"./CountryCard.scss\";\r\n\r\nconst Card = ({ abr, data, clear }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <button onClick={clear}>X</button>\r\n      {data ? (\r\n        <>\r\n          <div className=\"cardTitle\">\r\n            <img\r\n              src={`https://www.countryflags.io/${abr}/flat/64.png`}\r\n              alt={`${data.Country} flag`}\r\n            />\r\n            <span>{data.Country}</span>\r\n          </div>\r\n          <div className=\"cardContent\">\r\n            <div className=\"totals\">\r\n              <p>Totals</p>\r\n              <p>{`Confirmed: ${data.TotalConfirmed}`}</p>\r\n              <p\r\n                style={{ color: \"#ff0000\" }}\r\n              >{`Deaths: ${data.TotalDeaths}`}</p>\r\n              <p\r\n                style={{ color: \"#39b54a\" }}\r\n              >{`Recovered: ${data.TotalRecovered}`}</p>\r\n            </div>\r\n            <div className=\"new\">\r\n              <p>Last 24 hours</p>\r\n              <p>{`Confirmed: ${data.NewConfirmed}`}</p>\r\n              <p style={{ color: \"#ff0000\" }}>{`Deaths: ${data.NewDeaths}`}</p>\r\n              <p\r\n                style={{ color: \"#39b54a\" }}\r\n              >{`Recovered: ${data.NewRecovered}`}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"cardTitle\">No data available for this Country</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction arePropsEqual(prev, next) {\r\n  return prev.data === next.data;\r\n}\r\n\r\nexport const CountryCard = memo(Card, arePropsEqual);\r\n","import React from \"react\";\r\nimport \"./BottomInfo.scss\";\r\n\r\nexport const BottomInfo = () => {\r\n  return (\r\n    <div className=\"bottomInfo\">\r\n      <span>\r\n        Data from{\" \"}\r\n        <a href=\"https://covid19api.com/\" target=\"blank\">\r\n          covid19api.com\r\n        </a>{\" \"}\r\n        Datasource does not feature all countries.{\" \"}\r\n      </span>\r\n      <span>Made by Michael Ballard</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Help.scss\";\r\n\r\nexport const Help = () => {\r\n  const [hovering, setHovering] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setHovering(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  const handleHover = () => {\r\n    setHovering(!hovering);\r\n  };\r\n  return (\r\n    <div className=\"help\">\r\n      <div\r\n        className=\"mouseOver\"\r\n        onMouseEnter={handleHover}\r\n        onMouseLeave={handleHover}\r\n      >\r\n        <span>?</span>\r\n      </div>\r\n      <div className={`instructionContainer${hovering ? \" show\" : \"\"}`}>\r\n        <span>\r\n          Click and drag to move. Scroll to zoom. Click a country to view stats.\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Map from \"./components/Map\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Legend } from \"./components/Legend\";\r\nimport { CountryCard } from \"./components/CountryCard\";\r\nimport { BottomInfo } from \"./components/BottomInfo\";\r\nimport { Help } from \"./components/Help\";\r\n\r\nfunction App() {\r\n  const [tooltip, setTooltip] = useState(\"\");\r\n  const [countries, setCountries] = useState([]);\r\n  const [lastUpdated, setLastUpdated] = useState();\r\n  const [mostCases, setMostCases] = useState();\r\n  const [selectedCountry, setSelectedCountry] = useState();\r\n\r\n  const normalizeCountry = (input) => {\r\n    switch (input) {\r\n      case \"Venezuela\":\r\n        return \"Venezuela (Bolivarian Republic)\";\r\n      case \"Democratic Republic of the Congo\":\r\n        return \"Congo (Kinshasa)\";\r\n      case \"Russia\":\r\n        return \"Russian Federation\";\r\n      case \"Falkland Islands\":\r\n        return \"Falkland Islands (Malvinas)\";\r\n      case \"Republic of the Congo\":\r\n        return \"Congo (Brazzaville)\";\r\n      case \"United Republic of Tanzania\":\r\n        return \"Tanzania, United Republic of\";\r\n      case \"Uruguay\":\r\n        return \"Uruguay\";\r\n      case \"Republic of Serbia\":\r\n        return \"Serbia\";\r\n      case \"Macedonia\":\r\n        return \"Macedonia, Republic of\";\r\n      case \"Kosovo\":\r\n        return \"Republic of Kosovo\";\r\n      case \"Iran\":\r\n        return \"Iran, Islamic Republic of\";\r\n      case \"Syria\":\r\n        return \"Syrian Arab Republic (Syria)\";\r\n      case \"Somaliland\":\r\n        return \"Somalia\";\r\n      case \"Vietnam\":\r\n        return \"Viet Nam\";\r\n      case \"Laos\":\r\n        return \"Lao PDR\";\r\n      case \"North Korea\":\r\n        return \"Korea (North)\";\r\n      case \"South Korea\":\r\n        return \"Korea (South)\";\r\n      case \"Taiwan\":\r\n        return \"Taiwan, Republic of China\";\r\n      case \"East Timor\":\r\n        return \"Timor-Leste\";\r\n      case \"Brunei\":\r\n        return \"Brunei Darussalam\";\r\n      case \"Guinea Bissau\":\r\n        return \"Guinea-Bissau\";\r\n      default:\r\n        return input;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.covid19api.com/summary\")\r\n      .then((res) => res.json())\r\n      .then(({ Date, Countries }) => {\r\n        Countries.sort((a, b) => a.TotalConfirmed > b.TotalConfirmed);\r\n        setLastUpdated(Date);\r\n        setCountries(Countries);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let most =\r\n      countries.length > 0\r\n        ? countries.sort((a, b) => {\r\n            return b.TotalConfirmed - a.TotalConfirmed;\r\n          })[0].TotalConfirmed\r\n        : null;\r\n    setMostCases(most);\r\n  }, [countries, mostCases]);\r\n\r\n  const handleSelectedClear = () => {\r\n    setSelectedCountry();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {countries.length > 0 ? (\r\n        <>\r\n          {selectedCountry ? (\r\n            <CountryCard {...selectedCountry} clear={handleSelectedClear} />\r\n          ) : null}\r\n\r\n          <Legend mostCases={mostCases} />\r\n          <ReactTooltip>{tooltip}</ReactTooltip>\r\n          <BottomInfo />\r\n          <Help />\r\n          <Map\r\n            setTooltipContent={setTooltip}\r\n            countryData={countries}\r\n            mostCases={mostCases}\r\n            setSelectedCountry={setSelectedCountry}\r\n            selectedCountry={selectedCountry}\r\n            normalizeCountry={normalizeCountry}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}